-------------------------------------------------------------------------------
-- Module      = dr7f701373_startup.850
-- Version     = V1.21
--               extracted from device file dr7f701373.dvf 
--               by DeFiXRH850 0.9.1.0
-------------------------------------------------------------------------------
--                                  COPYRIGHT
-------------------------------------------------------------------------------
-- Copyright (c) 2017 by Renesas Electronics Europe GmbH,
--               a company of the Renesas Electronics Corporation
-------------------------------------------------------------------------------
-- Purpose:      Startup Code
--
-------------------------------------------------------------------------------
--
-- Warranty Disclaimer
--
-- Because the Product(s) is licensed free of charge, there is no warranty
-- of any kind whatsoever and expressly disclaimed and excluded by Renesas,
-- either expressed or implied, including but not limited to those for
-- non-infringement of intellectual property, merchantability and/or
-- fitness for the particular purpose.
-- Renesas shall not have any obligation to maintain, service or provide bug
-- fixes for the supplied Product(s) and/or the Application.
--
-- Each User is solely responsible for determining the appropriateness of
-- using the Product(s) and assumes all risks associated with its exercise
-- of rights under this Agreement, including, but not limited to the risks
-- and costs of program errors, compliance with applicable laws, damage to
-- or loss of data, programs or equipment, and unavailability or
-- interruption of operations.
--
-- Limitation of Liability
--
-- In no event shall Renesas be liable to the User for any incidental,
-- consequential, indirect, or punitive damage (including but not limited
-- to lost profits) regardless of whether such liability is based on breach
-- of contract, tort, strict liability, breach of warranties, failure of
-- essential purpose or otherwise and even if advised of the possibility of
-- such damages. Renesas shall not be liable for any services or products
-- provided by third party vendors, developers or consultants identified or
-- referred to the User by Renesas in connection with the Product(s) and/or
-- the Application.
--
-------------------------------------------------------------------------------
-- Environment:
--              Device:         R7F701373xABG
--              IDE:            GHS Multi for V800  V6.xx or later
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-------------  Selection of external interrupt service handler
-------------  User modifiable section
-------------  Please uncomment the required interrupt service handler
-------------------------------------------------------------------------------
#include <dr7f701373_irq.h>

-------------------------------------------------------------------------------
-------------  Basic Initialisation of the controller
-------------  User modifiable section
-------------------------------------------------------------------------------
  .weak	___lowinit
  .weak	___ghs_rramstart
  .set   EBV, 0x8000
  .text
_RESET:
  -- Initialization of general CPU registers
  mov r0,r2
  mov r0, r3
  mov r0, r4
  mov r0, r5
  mov r0, r6
  mov r0, r7
  mov r0, r8
  mov r0, r9
  mov r0, r10
  mov r0, r11
  mov r0, r12
  mov r0, r13
  mov r0, r14
  mov r0, r15
  mov r0, r16
  mov r0, r17
  mov r0, r18
  mov r0, r19
  mov r0, r20
  mov r0, r21
  mov r0, r22
  mov r0, r23
  mov r0, r24
  mov r0, r25
  mov r0, r26
  mov r0, r27
  mov r0, r28
  mov r0, r29
  mov r0, r30
  mov r0, r31

  -- Initialization of CPU function group system registers
  -- Main bank registers
  ldsr    r0,     EIPC
  ldsr    r0,     EIPSW
  ldsr    r0,     FEPC
  ldsr    r0,     FEPSW
  mov     0x00010000, r6
  ldsr    r6,     PSW
  mov     0x00020000, r6  -- initial value for FPSR
  ldsr    r6,     FPSR
  ldsr    r0,     FPEPC
  ldsr    r0,     FPST
  ldsr    r0,     FPCC
  ldsr    r0,     FPCFG
  ldsr    r0,     FPEC
  mov     0x00000020, r6
  ldsr    r6,     PSW
  ldsr    r0,     EIIC
  ldsr    r0,     FEIC
  ldsr    r0,     CTPC
  ldsr    r0,     CTPSW
  ldsr    r0,     CTBP
  ldsr    r0,     EIWR
  ldsr    r0,     FEWR
  ldsr    r0,     MCFG0
  ldsr    r0,     MCFG1
  ldsr    r0,     RBASE
  ldsr    r0,     EBASE
  ldsr    r0,     INTBP
  ldsr    r0,     PID
  ldsr    r0,     SCCFG
  ldsr    r0,     SCBP
  ldsr    r0,     HTCFG0
  ldsr    r0,     MEA
  ldsr    r0,     ASID
  ldsr    r0,     MEI

  -- Initialization of the global pointer
  mov     __gp, gp

  -- Initialization of the text pointer
  mov     __tp, r5

  -- Initialization of the stack pointer
  movhi	hi(___ghsend_stack-4),zero,sp
  movea	lo(___ghsend_stack-4),sp,sp
  mov -4,r1
  and r1,sp

  -- Initialization of the interrupt base pointer
  mov __ex_entry + IRQ_TABLE_START,r1
  ldsr r1,intbp,1

  -- First set EBASE register address
  mov __ex_entry, r10
  -- set 0x0 or 0x1 to EBASE.RINT for reduced interrupt 
  -- ori  1, r10
  ldsr r10, EBASE, 1
  -- then set 1 to PSW.EBV -> RBASE!=EBASE
  stsr PSW, r10, 0
  mov  EBV, r11
  or   r11, r10
  ldsr r10, PSW, 0

  -- Jump to the HW initialisation function
  jarl	___lowinit, lp

  -- Jump to the initialisation functions of the library
  -- and from there to main()
  jr __start
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-------------  Interrupt service routine of unused interrupts
  .global  __unused_isr
__unused_isr:
  br	__unused_isr
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-------------  Add section ".intvect" to your linker command file
-------------  at address 0x0000
-------------
-------------	i.e.	.intvect    0x0000:
-------------------------------------------------------------------------------
.section".intvect",.text

-------------------------------------------------------------------------------
-------------  Initializing of interrupt vector table
-------------  Please don't modify this section
-------------------------------------------------------------------------------

  .global _RESET
  .offset 0x0000
__ex_entry:
  #if (RESET_ENABLE > 0x00000000)
    .extern _RESET
    jr _RESET
  #else
    jr __unused_isr
  #endif
  
   #ifdef MCU_FEINT_TEST
  .offset 0x00f0
  #if (FEINT_ENABLE > 0x00000000)
      .extern _MCU_FEINT_ISR
      jr _MCU_FEINT_ISR
  #else
    jr __unused_isr
  #endif
  #endif

