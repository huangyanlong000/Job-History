var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"TNC2","ref":false,"files":[{"name":"TNC2.c","type":"source","group":"model","path":"D:\\Branch\\L5000\\ModelPro\\Code\\TNC2_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: TNC2.c\r\n *\r\n * Code generated for Simulink model 'TNC2'.\r\n *\r\n * Model version                  : 1.99\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri May 12 16:45:48 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M3\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"TNC2.h\"\r\n#include \"TNC2_private.h\"\r\n\r\n/* Block states (default storage) */\r\nDW_TNC2_T TNC2_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU_TNC2_T TNC2_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY_TNC2_T TNC2_Y;\r\n\r\n/* Output and update for Simulink Function: '<S1>/Simulink Function' */\r\nvoid TNC2_RTE_Get_DataU8(uint8_T rtu_x, uint8_T rtu_y, uint8_T *rty_val)\r\n{\r\n  /* SignalConversion generated from: '<S2>/val' incorporates:\r\n   *  SignalConversion generated from: '<S2>/x'\r\n   *  SignalConversion generated from: '<S2>/y'\r\n   *  Sum: '<S2>/Sum'\r\n   */\r\n  *rty_val = (uint8_T)((uint32_T)rtu_x + rtu_y);\r\n}\r\n\r\n/* Model step function for TID1 */\r\nvoid Tick_Function(void)               /* Explicit Task: Tick_Function */\r\n{\r\n  /* RootInportFunctionCallGenerator generated from: '<Root>/Tick_Function' incorporates:\r\n   *  SubSystem: '<Root>/Function-Call Subsystem'\r\n   */\r\n  /* DataStoreWrite: '<S1>/Data Store Write' incorporates:\r\n   *  Constant: '<S1>/Constant'\r\n   *  DataStoreRead: '<S1>/Data Store Read'\r\n   *  Sum: '<S1>/Add'\r\n   */\r\n  TNC2_DW.SYS_TICK++;\r\n\r\n  /* FunctionCaller: '<S1>/Function Caller' incorporates:\r\n   *  Inport: '<Root>/x'\r\n   *  Inport: '<Root>/y'\r\n   *  Outport: '<Root>/val'\r\n   */\r\n  TNC2_RTE_Get_DataU8(TNC2_U.x, TNC2_U.y, &TNC2_Y.val);\r\n\r\n  /* End of Outputs for RootInportFunctionCallGenerator generated from: '<Root>/Tick_Function' */\r\n}\r\n\r\n/* Model initialize function */\r\nvoid TNC2_initialize(void)\r\n{\r\n  /* (no initialization code required) */\r\n}\r\n\r\n/* Model terminate function */\r\nvoid TNC2_terminate(void)\r\n{\r\n  /* (no terminate code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"TNC2.h","type":"header","group":"model","path":"D:\\Branch\\L5000\\ModelPro\\Code\\TNC2_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: TNC2.h\r\n *\r\n * Code generated for Simulink model 'TNC2'.\r\n *\r\n * Model version                  : 1.99\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri May 12 16:45:48 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M3\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_TNC2_h_\r\n#define RTW_HEADER_TNC2_h_\r\n#ifndef TNC2_COMMON_INCLUDES_\r\n#define TNC2_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* TNC2_COMMON_INCLUDES_ */\r\n\r\n#include \"TNC2_types.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n\r\n/* Block states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  uint32_T SYS_TICK;                   /* '<Root>/Data Store Memory' */\r\n} DW_TNC2_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  uint8_T x;                           /* '<Root>/x' */\r\n  uint8_T y;                           /* '<Root>/y' */\r\n} ExtU_TNC2_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  uint8_T val;                         /* '<Root>/val' */\r\n} ExtY_TNC2_T;\r\n\r\n/* Block states (default storage) */\r\nextern DW_TNC2_T TNC2_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU_TNC2_T TNC2_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY_TNC2_T TNC2_Y;\r\n\r\n/* Model entry point functions */\r\nextern void TNC2_initialize(void);\r\nextern void TNC2_terminate(void);\r\n\r\n/* Exported entry point function */\r\nextern void Tick_Function(void);\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'TNC2'\r\n * '<S1>'   : 'TNC2/Function-Call Subsystem'\r\n * '<S2>'   : 'TNC2/Function-Call Subsystem/Simulink Function'\r\n */\r\n#endif                                 /* RTW_HEADER_TNC2_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"TNC2_private.h","type":"header","group":"model","path":"D:\\Branch\\L5000\\ModelPro\\Code\\TNC2_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: TNC2_private.h\r\n *\r\n * Code generated for Simulink model 'TNC2'.\r\n *\r\n * Model version                  : 1.99\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri May 12 16:45:48 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M3\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_TNC2_private_h_\r\n#define RTW_HEADER_TNC2_private_h_\r\n#include \"rtwtypes.h\"\r\n#include \"TNC2.h\"\r\n\r\nextern void TNC2_RTE_Get_DataU8(uint8_T rtu_x, uint8_T rtu_y, uint8_T *rty_val);\r\n\r\n#endif                                 /* RTW_HEADER_TNC2_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"TNC2_types.h","type":"header","group":"model","path":"D:\\Branch\\L5000\\ModelPro\\Code\\TNC2_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: TNC2_types.h\r\n *\r\n * Code generated for Simulink model 'TNC2'.\r\n *\r\n * Model version                  : 1.99\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri May 12 16:45:48 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M3\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_TNC2_types_h_\r\n#define RTW_HEADER_TNC2_types_h_\r\n\r\n/* Model Code Variants */\r\n#endif                                 /* RTW_HEADER_TNC2_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"sharedutility","path":"D:\\Branch\\L5000\\ModelPro\\Code\\slprj\\ert\\_sharedutils","tag":"","groupDisplay":"Shared files","code":"/*\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'TNC'.\r\n *\r\n * Model version                  : 1.91\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Thu May 11 14:45:23 2023\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: NXP->Cortex-M3\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n#define CINT64_T\r\n\r\ntypedef struct {\r\n  int64_T re;\r\n  int64_T im;\r\n} cint64_T;\r\n\r\n#define CUINT64_T\r\n\r\ntypedef struct {\r\n  uint64_T re;\r\n  uint64_T im;\r\n} cuint64_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"D:\\Branch\\L5000\\ModelPro\\Code\\TNC2_ert_rtw","tag":"","groupDisplay":"Interface files","code":"/*\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'TNC2'.\r\n *\r\n * Model version                  : 1.99\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri May 12 16:45:48 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M3\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"TNC2.h\"\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((void*) 0)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((void) 0)\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}]};